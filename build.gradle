plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'org.squidmin.java.spring.gradle.bigquery'
version = '0.0.1-SNAPSHOT'
println "Build Version = ${version ?: '[none]'}"
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jar {
	manifest {
		attributes (
			'Main-Class': 'org.squidmin.java.spring.gradle.bigquery.JavaSpringGradleBigQueryReferenceApplication'
		)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudGcpVersion', "4.7.2")
	set('springCloudVersion', "2022.0.4")
}

springBoot {
	mainClass = 'com.ford.nacustoms.classifications.ClassificationsApplication'
}

dependencies {
	// Core libraries
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.cloud:spring-cloud-context'

	// BigQuery
	implementation platform('com.google.cloud:libraries-bom:26.11.0')
	implementation 'com.google.cloud:google-cloud-bigquery:2.24.2'

	implementation 'com.github.jknack:handlebars:4.3.1'

	// SnakeYAML
	implementation ('org.yaml:snakeyaml') {
		version {
			strictly "1.33"
		}
		because "patch CVE-2022-25857 brought in by snakeyaml."
	}

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'

	// Spring configuration processing
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'


	// Test dependencies
	testImplementation 'org.springframework:spring-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	testCompileOnly 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

dependencyManagement {
	imports {
		mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()

	systemProperty 'spring.profiles.active', System.getProperty('PROFILE')
	systemProperty 'GCP_SA_KEY_PATH', System.getProperty('GCP_SA_KEY_PATH')
	systemProperty 'GCP_ADC_ACCESS_TOKEN', System.getProperty('GCP_ADC_ACCESS_TOKEN')
	systemProperty 'GCP_SA_ACCESS_TOKEN', System.getProperty('GCP_SA_ACCESS_TOKEN')
	systemProperty 'GCP_DEFAULT_USER_PROJECT_ID', System.getProperty('GCP_DEFAULT_USER_PROJECT_ID')
	systemProperty 'GCP_DEFAULT_USER_DATASET', System.getProperty('GCP_DEFAULT_USER_DATASET')
	systemProperty 'GCP_DEFAULT_USER_TABLE', System.getProperty('GCP_DEFAULT_USER_TABLE')
	systemProperty 'GCP_SA_PROJECT_ID', System.getProperty('GCP_SA_PROJECT_ID')
	systemProperty 'GCP_SA_DATASET', System.getProperty('GCP_SA_DATASET')
	systemProperty 'GCP_SA_TABLE', System.getProperty('GCP_SA_TABLE')

	systemProperty 'SCHEMA', System.getProperty('SCHEMA')

	exclude '**/BigQueryAdminClientTest.class'
	exclude '**/ControllerTest.class'

	testLogging {
		showStandardStreams = true
		events 'passed', 'skipped', 'failed'
	}
}

tasks.named('bootRun') {
	systemProperty 'spring.profiles.active', System.getProperty('PROFILE')
	systemProperty 'GCP_SA_KEY_PATH', System.getProperty('GCP_SA_KEY_PATH')
	systemProperty 'GCP_ADC_ACCESS_TOKEN', System.getProperty('GCP_ADC_ACCESS_TOKEN')
	systemProperty 'GCP_SA_ACCESS_TOKEN', System.getProperty('GCP_SA_ACCESS_TOKEN')
	systemProperty 'GCP_DEFAULT_USER_PROJECT_ID', System.getProperty('GCP_DEFAULT_USER_PROJECT_ID')
	systemProperty 'GCP_SA_PROJECT_ID', System.getProperty('GCP_SA_PROJECT_ID')
	systemProperty 'GCP_DEFAULT_USER_DATASET', System.getProperty('GCP_DEFAULT_USER_DATASET')
	systemProperty 'GCP_SA_DATASET', System.getProperty('GCP_SA_DATASET')
	systemProperty 'GCP_DEFAULT_USER_TABLE', System.getProperty('GCP_DEFAULT_USER_TABLE')
	systemProperty 'GCP_SA_TABLE', System.getProperty('GCP_SA_TABLE')
}
