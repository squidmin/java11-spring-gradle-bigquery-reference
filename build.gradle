plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'org.squidmin.spring.rest'
version = '0.0.1-SNAPSHOT'
println "Build Version = ${version ?: '[none]'}"
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jar {
	manifest {
		attributes (
			'Main-Class': 'orb.squidmin.spring.rest.springrestlabs.SpringRestLabsApplication'
		)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.6")
}

dependencies {
	// Core libraries
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.cloud:spring-cloud-context'

	// BigQuery
	implementation platform('com.google.cloud:libraries-bom:26.11.0')
	implementation 'com.google.cloud:google-cloud-bigquery:2.24.2'

	// SnakeYAML
	implementation ('org.yaml:snakeyaml') {
		version {
			strictly "1.33"
		}
		because "patch CVE-2022-25857 brought in by snakeyaml."
	}

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'

	// Spring configuration processing
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'


	// Test dependencies
	testImplementation 'org.springframework:spring-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testCompileOnly 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()

	systemProperty 'spring.profiles.active', System.getProperty('profile')
	systemProperty 'projectId', System.getProperty('projectId')
	systemProperty 'datasetName', System.getProperty('datasetName')
	systemProperty 'tableName', System.getProperty('tableName')
	systemProperty 'schema', System.getProperty('schema')

	exclude '*/BigQueryAdminClientIntegrationTest.class'
	exclude '*/ControllerTest.class'

	testLogging {
		showStandardStreams = true
		events 'passed', 'skipped', 'failed'
	}
}
